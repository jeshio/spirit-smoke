FROM node:12-alpine AS node_base

FROM node_base as deps
WORKDIR /usr/app/admin
COPY admin/package.json /usr/app/admin/package.json
COPY admin/yarn.lock /usr/app/admin/yarn.lock
COPY admin/.env /usr/app/admin/.env

# RUN cat /usr/app/admin/.env

RUN yarn cache clean

# --no-cache: download package index on-the-fly, no need to cleanup afterwards
# --virtual: bundle packages, remove whole bundle at once, when done
RUN apk --no-cache --virtual build-dependencies add \
    python \
    make \
    g++ \
    && yarn install \
    && apk del build-dependencies

FROM node_base as build
WORKDIR /usr/app
# RUN cat /usr/app/admin/.env

COPY --from=deps /usr/app/admin/node_modules /usr/app/admin/node_modules
COPY utils/ /usr/app/utils
COPY gql/ /usr/app/gql
COPY admin/ /usr/app/admin

# RUN cat /usr/app/admin/.env

WORKDIR /usr/app/admin

# RUN cat /usr/app/admin/.env
COPY admin/.env /usr/app/admin/.env

RUN yarn build

FROM nginx:stable

COPY --from=build /usr/app/admin/dist /var/www
COPY ./admin/nginx/default.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]