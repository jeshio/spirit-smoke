extend type Query {
  productLines: [ProductLine!]!
  productLine(id: ID!): ProductLine
}

extend type Mutation {
  createProductLine(input: ProductLineInput!): ProductLineSimple!
  updateProductLine(id: ID!, input: ProductLineInput!): ProductLineSimple!
  deleteProductLine(id: ID!): ID!
}

input ProductLineInput {
  country: String
  color: String
  barcode: String
  name: String!
  slug: String!
  price: Int
  weight: Int
  productCategoryId: ID!
}

interface IProductLine {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  price: Int!
  weight: Int!
  productCategoryId: ID
  createdAt: Date!
  updatedAt: Date!
}

type ProductLineSimple implements IProductLine {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  price: Int!
  weight: Int!
  productCategoryId: ID
  createdAt: Date!
  updatedAt: Date!
}

type ProductLine implements IProductLine {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  price: Int!
  weight: Int!
  productCategoryId: ID
  createdAt: Date!
  updatedAt: Date!
  productCategory: ProductCategory
  products: [Product!]!
} 