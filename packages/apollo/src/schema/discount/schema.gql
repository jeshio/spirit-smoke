extend type Query {
  discounts: [Discount]!
  discount(id: ID!): Discount
}

extend type Mutation {
  createDiscount(input: DiscountInput!): Discount!
  addProductCategoryDiscount(discountId: ID!, productCategoryId: ID!): Discount!
  addProductDiscount(discountId: ID!, productId: ID!): Discount!
  addFeatureDiscount(discountId: ID!, featureId: ID!): Discount!
  addOrderDiscount(discountId: ID!, orderId: ID!): Discount!
  addBonusDiscount(discountId: ID!, bonusId: ID!): Discount!
}

input DiscountInput {
  name: String!
  percent: Float
  rub: Float
  code: String
  startDate: Date!
  endDate: Date!
  isGlobal: Boolean
}

type Discount {
  id: ID!
  name: String!
  percent: Float
  rub: Float
  code: String
  startDate: Date!
  endDate: Date!
  isGlobal: Boolean!
  productCategories: [ProductCategory]!
  products: [Product]!
  features: [Feature]!
  orders: [Order]!
  bonuses: [Bonus]!
} 