extend type Query {
  productCategories: [ProductCategory!]!
  productCategory(id: ID!): ProductCategory
}

extend type Mutation {
  createProductCategory(input: ProductCategoryInput!): ProductCategorySimple!
  updateProductCategory(id: ID!, input: ProductCategoryInput!): ProductCategorySimple!
  deleteProductCategory(id: ID!): ID!
}

input ProductCategoryInput {
  name: String!
  slug: String!
  description: String!
}

interface IProductCategory {
  id: ID!
  name: String!
  slug: String!
  description: String!
  createdAt: String!
  updatedAt: String!
}

type ProductCategorySimple implements IProductCategory {
  id: ID!
  name: String!
  slug: String!
  description: String!
  createdAt: String!
  updatedAt: String!
}

type ProductCategory implements IProductCategory {
  id: ID!
  name: String!
  slug: String!
  description: String!
  createdAt: String!
  updatedAt: String!
  products: [Product!]!
  features: [Feature!]!
  discounts: [Discount!]!
}