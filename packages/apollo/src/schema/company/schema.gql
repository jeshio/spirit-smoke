extend type Query {
  companies: [Company!]!
  company(id: ID!): Company
}

extend type Mutation {
  createCompany(input: CompanyInput!): CompanySimple!
  updateCompany(id: ID!, input: CompanyInput!): CompanySimple!
  deleteCompany(id: ID!): ID!
}

input CompanyInput {
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
}

interface ICompany {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  createdAt: String!
  updatedAt: String!
}

type CompanySimple implements ICompany {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  createdAt: String!
  updatedAt: String!
}

type Company implements ICompany {
  id: ID!
  country: String
  color: String!
  barcode: String
  name: String!
  slug: String!
  products: [Product!]!
  createdAt: String!
  updatedAt: String!
} 